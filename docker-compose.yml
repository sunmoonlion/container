
volumes: # 自定义数据卷
  p0_v_mysql_master_1: 
  p0_v_mysql_slave_1: 
  p0_v_redis_master_1: 
  p0_v_redis_slave_1:
  p0_v_tracker_master_1:
  p0_v_tracker_slave_1:
  p0_v_storage_master_1:
  p0_v_storage_slave_1:
  p0_v_es_master_1:
  p0_v_es_slave_1:
  p0_v_es_2.4.6:

networks: # 自定义网络(默认桥接), 不使用links通信
  p0_n_mysql_master_1:
    driver: bridge
  p0_n_redis_master_1: 
    driver: bridge
  # fastdfs-net:
  #   driver: bridge


services:
  p0_s_redis_master_1:
    image: redis:6.2.5
    container_name: container_p0_s_redis_master_1
    command: redis-server /etc/redis/redis.conf # 容器启动后启动redis服务器
    networks:
      - p0_n_redis_master_1
    volumes:
      - p0_v_redis_master_1:/data # 通过挂载给redis数据备份
      - ./proj0_toolbox/proj0_config/p0_b_redis_master_1/redis.conf:/etc/redis/redis.conf # 挂载redis配置文件
    ports:
      - "6370:6379"
    #restart: always # always表容器运行发生错误时一直重启

  p0_s_redis_slave_1:
    image: redis:6.2.5
    container_name: container_p0_s_redis_slave_1
    command: redis-server /etc/redis/redis.conf # 容器启动后启动redis服务器
    networks:
      - p0_n_redis_master_1
    volumes:
      - p0_v_redis_slave_1:/data # 通过挂载给redis数据备份
      - ./proj0_toolbox/proj0_config/p0_b_redis_slave_1/redis.conf:/etc/redis/redis.conf # 挂载redis配置文件
    ports:
      - "7370:6379"
    #restart: always # always表容器运行发生错误时一直重启

  p0_s_mysql_master_1:
    image: mysql:8.0.28
    container_name: container_p0_s_mysql_master_1
    env_file:  
      - ./proj0_toolbox/proj0_config/p0_b_mysql_master_1/env/.env # 使用了环境变量文件
    networks:  
      - p0_n_mysql_master_1
    volumes:
      - p0_v_mysql_master_1:/var/lib/mysql:rw # 挂载数据库数据, 可读可写
      - ./proj0_toolbox/proj0_config/p0_b_mysql_master_1/conf/my.cnf:/etc/mysql/my.cnf # 挂载配置文件
      - ./proj0_toolbox/proj0_config/p0_b_mysql_master_1/init/:/docker-entrypoint-initdb.d/ # 挂载数据初始化sql脚本
    ports:
      - "3300:3306" # 与配置文件保持一致
    #restart: always

  p0_s_mysql_slave_1:
    image: mysql:8.0.28
    container_name: contanier_p0_s_mysql_slave_1
    env_file:  
      - ./proj0_toolbox/proj0_config/p0_b_mysql_slave_1/env/.env # 使用了环境变量文件
    networks:  
      - p0_n_mysql_master_1
    volumes:
      - p0_v_mysql_slave_1:/var/lib/mysql:rw # 挂载数据库数据, 可读可写
      - ./proj0_toolbox/proj0_config/p0_b_mysql_slave_1/conf/my.cnf:/etc/mysql/my.cnf # 挂载配置文件
      - ./proj0_toolbox/proj0_config/p0_b_mysql_slave_1/init:/docker-entrypoint-initdb.d/ # 挂载数据初始化sql脚本
    ports:
      - "4300:3306" # 与配置文件保持一致
    #restart: always

  p0_s_tracker_master_1:
    image: ygqygq2/fastdfs-nginx:latest
    container_name: container_p0_s_tracker_master_1
    command: tracker
    network_mode: host
    # networks:
    #   - fastdfs-net
    # environment:
    #   - CUSTOM_CONFIG=true
    volumes:   
      - p0_v_tracker_master_1:/var/fdfs
      # - ./proj0_toolbox/proj0_config/p0_b_fastdfs_master_1/conf:/etc/fdfs
      # - ./proj0_toolbox/proj0_config/p0_b_fastdfs_master_1/nginx.conf/conf.d:/usr/local/nginx/conf/conf.d
    # ports:
    #   - 22122:22122

  p0_s_storage_master_1:
    image: ygqygq2/fastdfs-nginx:latest
    container_name: container_p0_s_storage_master_1
    command: storage
    network_mode: host  
    # networks:
    #   - fastdfs-net
    environment:
    #   - CUSTOM_CONFIG=true
    # TRACKER_SERVER设置相同，使得同一组内的storage可以互相复制，否则，无法复制
      - TRACKER_SERVER=47.100.19.119:22122
      # - TRACKER_SERVER=47.103.135.26:22122      
    volumes: 
      - p0_v_storage_master_1:/var/fdfs
      # - ./proj0_toolbox/proj0_config/p0_b_fastdfs_master_1/conf:/etc/fdfs
      # - ./proj0_toolbox/proj0_config/p0_b_fastdfs_master_1/nginx.conf/conf.d:/usr/local/nginx/conf/conf.d
    # ports:
    #   - 28080:8080
    depends_on:
      - p0_s_tracker_master_1

  p0_s_tracker_slave_1:
    image: ygqygq2/fastdfs-nginx:latest
    container_name: container_p0_s_tracker_slave_1
    command: tracker
    network_mode: host
    # networks:
    #   - fastdfs-net
    # environment:
    #   - CUSTOM_CONFIG=true
    volumes:   
      - p0_v_tracker_slave_1:/var/fdfs
      # - ./proj0_toolbox/proj0_config/p0_b_fastdfs_slave_1/conf:/etc/fdfs
      # - ./proj0_toolbox/proj0_config/p0_b_fastdfs_slave_1/nginx.conf:/usr/local/nginx/conf/conf.d
    # ports:
    #   - 22122:22122

  p0_s_storage_slave_1:
    image: ygqygq2/fastdfs-nginx:latest
    container_name: container_p0_s_storage_slave_1
    command: storage
    network_mode: host  
    # networks:
    #   - fastdfs-net
    environment:
    #   - CUSTOM_CONFIG=true
    # TRACKER_SERVER设置相同，使得同一组内的storage可以互相复制，否则，无法复制,此时，在client内也只能设置一个相同的tracker，如果设置多个，会导致client错误
      - TRACKER_SERVER=47.100.19.119:22122
      # - TRACKER_SERVER=47.103.135.26:22122
    volumes: 
      - p0_v_storage_slave_1:/var/fdfs
      # - ./proj0_toolbox/proj0_config/p0_b_fastdfs_slave_1/conf:/etc/fdfs
      # - ./proj0_toolbox/proj0_config/p0_b_fastdfs_slave_1/nginx.conf:/usr/local/nginx/conf/conf.d
    # ports:
    #   - 28080:8080
    depends_on:
    #如果也启动本机的tracker，那么，只能等待本机的tracker，不能等待其他机器的tracker，否则，host导致端口冲突
      - p0_s_tracker_slave_1

  p0_s_es_master_1:
    image: elasticsearch
    container_name: container_p0_s_es_master_1
    environment:
      - node.name=p0_node_es_master_1
      - cluster.name=p0_cluster_es_1
      - discovery.seed_hosts=47.100.19.119
      - cluster.initial_master_nodes=p0_node_es_master_1,p0_node_es_slave_1
      - network.host=0.0.0.0
      - http.port=9200
    volumes:
      - p0_v_es_master_1:/usr/share/elasticsearch/data  
    network_mode: host

  p0_s_es_slave_1:
    image: elasticsearch
    container_name: container_p0_s_es_slave_1
    environment:
      - node.name=p0_node_es_slave_1
      - cluster.name=p0_cluster_es_1
      - discovery.seed_hosts=47.103.135.26
      - cluster.initial_master_nodes=p0_node_es_master_1,p0_node_es_slave_1
      - network.host=0.0.0.0
      - http.port=9200
    volumes:
      - p0_v_es_slave_1:/usr/share/elasticsearch/data
    network_mode: host
  
  elasticsearch:
    image: elasticsearch:2.4.6
    container_name: container_elasticsearch
    environment:
      - node.name=es_node_1
      - cluster.name=p0_cluster_es_1
      - discovery.zen.ping.unicast.hosts=localhost:9300  # 配置种子节点,注意配置不同于7.0版本后的配置，7.0版本后的配置为discovery.seed_hosts
      - discovery.zen.ping.multicast.enabled=false  # 禁用多播，这也不同于7.0版本后的配置，7.0版本后的配置没有这个配置
      - network.host=0.0.0.0
      - http.port=9200
      - ES_JAVA_OPTS=-Xms1g -Xmx1g  # 设置 JVM 堆内存
    volumes:
      - p0_v_es_2.4.6:/usr/share/elasticsearch/data
    network_mode: host  # 使用主机网络模式，便于网络访问