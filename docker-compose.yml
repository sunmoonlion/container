version: "3.8"
 
volumes: # 自定义数据卷


#p0:proj0_toolbox 
  p0_v_mysql_master_1: 
  p0_v_mysql_slave_1: 
  p0_v_redis_master_1: 
  p0_v_redis_slave_1:

#p1:proj1_sunmoonai
  p1_v_mysql_master_1: 
  p1_v_mysql_slave_1: 
  p1_v_redis_master_1: 
  p1_v_redis_slave_1:

networks: # 自定义网络(默认桥接), 不使用links通信

#p0:proj0_toolbox
  p0_n_mysql_master_1:
    driver: bridge
  p0_n_redis_master_1: 
    driver: bridge

#p1:proj1_sunmoonai
  p1_n_mysql_master_1:
    driver: bridge
  p1_n_redis_master_1: 
    driver: bridge

services:

#p0:proj0_toolbox
  p0_s_redis_master_1:
    image: redis:6.2.5
    container_name: container_p0_s_redis_master
    command: redis-server /etc/redis/redis.conf # 容器启动后启动redis服务器
    networks:
      - p0_n_redis_master_1
    volumes:
      - p0_v_redis_master_1:/data # 通过挂载给redis数据备份
      - ./proj0_toolbox/proj0_config/p0_b_redis_master_1/redis.conf:/etc/redis/redis.conf # 挂载redis配置文件
    ports:
      - "6379:6379"
    #restart: always # always表容器运行发生错误时一直重启
 
  p0_s_redis_slave_1:
    image: redis:6.2.5
    container_name: container_p0_s_redis_slave_1
    command: redis-server /etc/redis/redis.conf # 容器启动后启动redis服务器
    networks:
      - p0_n_redis_master_1
    volumes:
      - p0_v_redis_slave_1:/data # 通过挂载给redis数据备份
      - ./proj0_toolbox/proj0_config/p0_b_redis_slave_1/redis.conf:/etc/redis/redis.conf # 挂载redis配置文件
    ports:
      - "6380:6379"
    #restart: always # always表容器运行发生错误时一直重启

  p0_s_mysql_master_1:
    image: mysql:8.0.28
    container_name: container_p0_s_mysql_master_1
    env_file:  
      - ./proj0_toolbox/proj0_config/p0_b_mysql_master_1/env/.env # 使用了环境变量文件
    networks:  
      - p0_n_mysql_master_1
    volumes:
      - p0_v_mysql_master_1:/var/lib/mysql:rw # 挂载数据库数据, 可读可写
      - ./proj0_toolbox/proj0_config/p0_b_mysql_master_1/conf/my.cnf:/etc/mysql/my.cnf # 挂载配置文件
      - ./proj0_toolbox/proj0_config/p0_mysql_master_1/init/:/docker-entrypoint-initdb.d/ # 挂载数据初始化sql脚本
    ports:
      - "3300:3306" # 与配置文件保持一致
    #restart: always
 
  p0_s_mysql_slave_1:
    image: mysql:8.0.28
    container_name: contanier_p0_s_mysql_slave_1
    env_file:  
      - ./proj0_toolbox/proj0_config/p0_b_mysql_slave_1/env/.env # 使用了环境变量文件
    networks:  
      - p0_n_mysql_master_1
    volumes:
      - p0_v_mysql_slave_1:/var/lib/mysql:rw # 挂载数据库数据, 可读可写
      - ./proj0_toolbox/proj0_config/p0_b_mysql_slave_1/conf/my.cnf:/etc/mysql/my.cnf # 挂载配置文件
      - ./proj0_toolbox/proj0_config/p0_b_mysql_slave_1/init:/docker-entrypoint-initdb.d/ # 挂载数据初始化sql脚本
    ports:
      - "8300:3306" # 与配置文件保持一致
    #restart: always


  
#p1:proj1_sunmoonai
  p1_s_redis_master_1:
    image: redis:6.2.5
    container_name: container_p1_s_redis_master
    command: redis-server /etc/redis/redis.conf # 容器启动后启动redis服务器
    networks:
      - p1_n_redis_master_1
    volumes:
      - p1_v_redis_master_1:/data # 通过挂载给redis数据备份
      - ./proj1_sunmoonai/proj1_config/p1_b_redis_master_1/redis.conf:/etc/redis/redis.conf # 挂载redis配置文件
    ports:
      - "6379:6379"
    #restart: always # always表容器运行发生错误时一直重启
 
  p1_s_redis_slave_1:
    image: redis:6.2.5
    container_name: container_p1_s_redis_slave_1
    command: redis-server /etc/redis/redis.conf # 容器启动后启动redis服务器
    networks:
      - p1_n_redis_master_1
    volumes:
      - p1_v_redis_slave_1:/data # 通过挂载给redis数据备份
      - .proj1_sunmoonai/proj1_config/p1_b_redis_slave_1/redis.conf:/etc/redis/redis.conf # 挂载redis配置文件
    ports:
      - "6380:6379"
    #restart: always # always表容器运行发生错误时一直重启

  p1_s_mysql_master_1:
    image: mysql:8.0.28
    container_name: container_p1_s_mysql_master_1
    env_file:  
      - .proj1_sunmoonai/proj1_config/p1_b_mysql_master_1/env/.env # 使用了环境变量文件
    networks:  
      - p1_n_mysql_master_1
    volumes:
      - p1_v_mysql_master_1:/var/lib/mysql:rw # 挂载数据库数据, 可读可写
      - .proj1_sunmoonai/proj1_config/p1_b_mysql_master_1/conf/my.cnf:/etc/mysql/my.cnf # 挂载配置文件
      - .proj1_sunmoonai/proj1_config/p1_mysql_master_1/init/:/docker-entrypoint-initdb.d/ # 挂载数据初始化sql脚本
    ports:
      - "3301:3306" # 与配置文件保持一致
    #restart: always
 
  p1_s_mysql_slave_1:
    image: mysql:8.0.28
    container_name: contanier_p1_s_mysql_slave_1
    env_file:  
      - .proj1_sunmoonai/proj1_config/p1_b_mysql_slave_1/env/.env # 使用了环境变量文件
    networks:  
      - p1_n_mysql_master_1
    volumes:
      - p1_v_mysql_slave_1:/var/lib/mysql:rw # 挂载数据库数据, 可读可写
      - .proj1_sunmoonai/proj1_config/p1_b_mysql_slave_1/conf/my.cnf:/etc/mysql/my.cnf # 挂载配置文件
      - .proj1_sunmoonai/proj1_config/p1_b_mysql_slave_1/init:/docker-entrypoint-initdb.d/ # 挂载数据初始化sql脚本
    ports:
      - "8301:3306" # 与配置文件保持一致
    #restart: always

